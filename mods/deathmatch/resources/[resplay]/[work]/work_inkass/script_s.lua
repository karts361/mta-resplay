local resplayResource = getResourceFromName("resplay") -- Ресурс resplaylocal resplayRoot = getResourceRootElement(resplayResource) -- Root-элемент ресурса resplaylocal jobInkassIncMoney = 12000local jonInkassMoneyForLeftCar = 100local jobInkassTimeBackToVeh = 60000local jobInkassCpCoords = {}local jobInkassMoneyCpCords = {}local jobInkassCars = {} --local jobInkassCps = {}local jobInkassCpBlips = {} --  координаты для забирания денегlocal inkassPedMdl = 71 -- будущий бот для фургонаlocal inkassCar = 428 -- модель ид фургонаlocal inkassPed = nillocal inkassCarBlip = nil -- подсветка для ПДщниковlocal inkassTargetMarker = nillocal jobInkassVehMarker = nillocal inkassVehs = { -- фургоны    {-2428.7, 513.9, 30.2, 0 ,0, 214},	{-2425.7, 517, 30.2, 0, 0, 218},	{-2421.3, 520.2, 30.2, 0, 0, 224},	{-2414.8999, 527.099 ,30.2 , 0, 0 ,229.493}}local inkassFinishMarkers = { -- Маркеры завершения работы	{ -2408.6999511719, 538.20001220703, 28.81853 }}--[[local inkassFixMarkers = { -- Маркеры починки и заправки	{ 2505.7, -2634.2, 13.6 }}]]local inkassMarkers = { cords} -- Координаты-- Инициализация новой работы(событие onResourceStart)function inkassInit()	local newVeh, newMarker, nextPoint	inkassWorkId = exports.resplay:workNew("Инкассатор") -- Создаём новую работу и узнаём её ID	exports.resplay:groupAttachVehicleToGroup(inkassCar, inkassGroupId) -- Присоединяем рабочий транспорт к группе игроков	exports.resplay:workAttachVehicleToWork(inkassCar, inkassWorkId) -- Присоединяем рабочий транспорт к работе	-- Создаём фургоны	for _,vehCoord in ipairs(inkassVehs) do		newVeh = createVehicle(inkassCar, 0, 0, 0)		spawnVehicle(newVeh, vehCoord[1], vehCoord[2], vehCoord[3], vehCoord[4], vehCoord[5], vehCoord[6])		setVehicleRespawnPosition(newVeh, vehCoord[1], vehCoord[2], vehCoord[3], vehCoord[4], vehCoord[5], vehCoord[6])		setElementFrozen(newVeh, true)		setVehicleDamageProof(newVeh, true)		setVehicleEngineState(newVeh, false)	end	-- Маркеры завершения и починки/заправки	for i,finMarker in ipairs(inkassFinishMarkers) do		newMarker = createMarker(finMarker[1], finMarker[2], finMarker[3], "checkpoint", 4, 255, 0, 0, 128)		newBlip = createBlip(0, 0, 0, 53, 2, 255, 255, 255, 255, 32766)		attachElements(newBlip, newMarker)		setMarkerIcon(newMarker, "finish")		setElementVisibleTo(newMarker, root, false)		setElementVisibleTo(newBlip, root, false)		addEventHandler("onMarkerHit", newMarker, inkassFinishHit)		exports.resplay:pickupSetText(newMarker, "Завершить работу", 255, 0, 0)		inkassFinishMarkers[i] = newMarker	endend-- Вызывается, когда игрок начинает работу(событие onWorkStart)function inkassStart(workId, workPlayer, workVehicle)	if inkassWorkId and(workId == inkassWorkId) and isElement(workVehicle) and isElement(workPlayer) then -- Скрипт должен выполняться, когда событие вызывается для текущей работы		-- Инициализация параметров текущей работы		inkassParamIdRoute = exports.resplay:workAddWorkerParam(inkassWorkId, workPlayer, routeId)		inkassParamIdPoint = exports.resplay:workAddWorkerParam(inkassWorkId, workPlayer, firstPointId)		inkassParamIdTimer = exports.resplay:workAddWorkerParam(inkassWorkId, workPlayer, false)		inkassParamIdMarker = exports.resplay:workAddWorkerParam(inkassWorkId, workPlayer, false)		_, firstPoint = inkassGetCurrentPoint(routeId, firstPointId)		setElementVisibleTo(firstPoint[4], workPlayer, true)		local pointBlip = getAttachedBlip(firstPoint[4])		setElementVisibleTo(pointBlip, workPlayer, true)		for _,finMark in ipairs(inkassFinishMarkers) do			setElementVisibleTo(finMark, workPlayer, true)			pointBlip = getAttachedBlip(finMark)			setElementVisibleTo(pointBlip, workPlayer, true)		end		addEventHandler("onVehicleExplode", workVehicle, inkassBlowedUp)		addEventHandler("onPlayerWasted", workPlayer, inkassWasted)		addEventHandler("onVehicleExit", workVehicle, inkassVehicleLeave)		exports.resplay:playerShowMessage(workPlayer, "Двигайтесь к первой остановке своего маршрута и начинайте движение по нему.")	endendfunction inkassWasted() -- Работник погиб	exports.resplay:playerOutputLog(source, "Инкассатор - Завершение - Погиб", true)	exports.resplay:workFinish(inkassWorkId, source, 2)endfunction inkassBlowedUp() -- Взрыв рабочего транспорта	local workPlayer = exports.resplay:workGetWorkerByVehicle(inkassWorkId, source)	if workPlayer then		local money = exports.resplay:playerGetMoney(workPlayer)		exports.resplay:playerOutputLog(source, "Инкассатор - Завершение - Взрыв транспорта", true)		exports.resplay:playerTakeMoney(workPlayer, math.min(inkassMoneyForBlowedCar, money))		exports.resplay:workFinish(inkassWorkId, workPlayer, 4)	endendfunction inkassVehicleLeave(thePlayer, seat) -- Работник вышел из рабочего транспорта	if(seat == 0) then		local workPlayer = exports.resplay:workGetWorkerByVehicle(inkassWorkId, source)		if(workPlayer == thePlayer) and(exports.resplay:workGetState(inkassWorkId, workPlayer) == 0) then			local inkassTimer = exports.resplay:workGetWorkerParam(inkassWorkId, workPlayer, inkassParamIdTimer)			if isTimer(inkassTimer) then				killTimer(inkassTimer)			end			local inkassVehMarker = exports.resplay:workGetWorkerParam(inkassWorkId, workPlayer, inkassParamIdMarker)			if isElement(inkassVehMarker) then				destroyElement(inkassVehMarker)			end			inkassVehMarker = createMarker(0, 0, 0, "arrow", 2.0, 255, 255, 0, 255, workPlayer)			attachElements(inkassVehMarker, source, 0, 0, 5)			inkassTimer = setTimer(inkassVehicleLeft, 60000, 1, workPlayer)			exports.resplay:workSetWorkerParam(inkassWorkId, workPlayer, inkassParamIdTimer, inkassTimer)			exports.resplay:workSetWorkerParam(inkassWorkId, workPlayer, inkassParamIdMarker, inkassVehMarker)			exports.resplay:playerShowMessage(workPlayer, "У вас есть 60 секунд, чтобы вернуться в Инкассаторский фургон.")			exports.resplay:workSetState(inkassWorkId, workPlayer, 1)			addEventHandler("onVehicleEnter", source, inkassVehicleReturn)		end	endendfunction inkassVehicleLeft(workPlayer) -- Работник не вернулся в транспорт	local money = exports.resplay:playerGetMoney(workPlayer)	exports.resplay:playerOutputLog(workPlayer, "Инкассатор - Завершение - Покинул транспорт", true)	exports.resplay:playerTakeMoney(workPlayer, math.min(inkassMoneyForLeftCar, money))	exports.resplay:workFinish(inkassWorkId, workPlayer, 3)endfunction inkassFinish(workPlayer) -- Работник завершил работу успешно	exports.resplay:playerOutputLog(workPlayer, "Инкассатор - Завершение - Успех", true)	exports.resplay:workFinish(inkassWorkId, workPlayer, 1)endfunction inkassFinishPost(workId, workPlayer, reason)	if inkassWorkId and(workId == inkassWorkId) then		local workVehicle = exports.resplay:workGetWorkVehicle(inkassWorkId, workPlayer)		if isElement(workVehicle) then			removeEventHandler("onVehicleExplode", workVehicle, inkassBlowedUp)			removeEventHandler("onPlayerWasted", workPlayer, inkassWasted)			removeEventHandler("onVehicleExit", workVehicle, inkassVehicleLeave)			removeEventHandler("onVehicleEnter", workVehicle, inkassVehicleNewPassenger)			local inkassTimer = exports.resplay:workGetWorkerParam(inkassWorkId, workPlayer, inkassParamIdTimer)			if isTimer(inkassTimer) then				killTimer(inkassTimer)			end			local inkassVehMarker = exports.resplay:workGetWorkerParam(inkassWorkId, workPlayer, inkassParamIdMarker)			if isElement(inkassVehMarker) then				destroyElement(inkassVehMarker)			end			local routeId = exports.resplay:workGetWorkerParam(inkassWorkId, workPlayer, inkassParamIdRoute)			inkassVehiclesPerPath[routeId] = inkassVehiclesPerPath[routeId] - 1			local pointId = exports.resplay:workGetWorkerParam(inkassWorkId, workPlayer, inkassParamIdPoint)			_, pointInfo = inkassGetCurrentPoint(routeId, pointId)			setElementVisibleTo(pointInfo[4], workPlayer, false)			local pointBlip = getAttachedBlip(pointInfo[4])			setElementVisibleTo(pointBlip, workPlayer, false)			for _,fixMark in ipairs(inkassFixMarkers) do				setElementVisibleTo(fixMark, workPlayer, false)				pointBlip = getAttachedBlip(fixMark)				setElementVisibleTo(pointBlip, workPlayer, false)			end			for _,finMark in ipairs(inkassFinishMarkers) do				setElementVisibleTo(finMark, workPlayer, false)				pointBlip = getAttachedBlip(finMark)				setElementVisibleTo(pointBlip, workPlayer, false)			end		end	endend-- Выгрузка скриптаfunction inkassDestroy()	local thisResource = getThisResource()	if(getResourceState(thisResource) == "running") then		stopResource(thisResource)	endendaddEventHandler("onWorkSendClientInfo", root, inkassStopsUpdate)addEventHandler("onWorkInit", resplayRoot, inkassInit)addEventHandler("onWorkDestroy", resplayRoot, inkassDestroy)addEventHandler("onWorkStart", resplayRoot, inkassStart)addEventHandler("onWorkFinish", resplayRoot, inkassFinishPost)